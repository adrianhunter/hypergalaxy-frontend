// Generated by LiveScript 1.5.0
var m, Footer, Header, utils, App, configureTap, this$ = this;
m = require('mithril');
Footer = require('./footer');
Header = require('./header');
require('polythene/layout/theme/theme');
require('polythene/font-roboto/theme');
utils = require('../misc/utils');
App = {};
App.controller = function(){
  var currentRoute, ref$;
  currentRoute = utils.getCurrentRoute();
  if ((ref$ = App.vm) != null) {
    if (typeof ref$.init == 'function') {
      ref$.init();
    }
  }
  return {
    currentRoute: m.prop(currentRoute)
  };
};
App.view = function(ctrl, opts){
  var ref$, ref1$, ref2$;
  if ((opts != null ? opts.tag : void 8) === 'div') {
    if (((ref$ = App.vm.currentTap) != null ? ref$.id : void 8) !== ((ref1$ = opts.attrs) != null ? ref1$.id : void 8)) {
      App.vm.addTap(opts);
    }
  }
  return m('.app screen layout vertical', Header, m('.content', typeof (ref2$ = App.vm).taps == 'function' ? ref2$.taps().map(function(tap){
    var ref$;
    return m("#" + ((ref$ = tap.attrs) != null ? ref$.id : void 8) + "-tap ", {
      'class': (App.vm.showTap() !== tap.attrs.id ? 'hidden' : void 8) + " tap-view",
      config: configureTap
    }, tap);
  }) : void 8), Footer);
};
App.vm = {
  taps: m.prop([]),
  init: function(){},
  showTap: m.prop(),
  tapElements: {},
  addTapElement: function(el){
    var ref$;
    return (ref$ = App.vm.currentTap) != null ? ref$.classList.add('hidden') : void 8;
  },
  currentTap: null,
  addTap: function(newTap){
    var currentTaps, tabAlreayExists, i$, len$, tab, ref$, ref1$;
    currentTaps = this.taps();
    tabAlreayExists = false;
    for (i$ = 0, len$ = currentTaps.length; i$ < len$; ++i$) {
      tab = currentTaps[i$];
      if (((ref$ = tab.attrs) != null ? ref$.id : void 8) === ((ref1$ = newTap.attrs) != null ? ref1$.id : void 8)) {
        tabAlreayExists = true;
      }
    }
    if (!tabAlreayExists) {
      currentTaps.push(newTap);
      this.taps(currentTaps);
    }
    return this.showTap(newTap.attrs.id);
  }
};
configureTap = function(el, isInit, context, foo){
  var ref$, ref1$;
  context.retain = true;
  if (!isInit) {
    if (el.id !== ((ref$ = App.vm.currentTap) != null ? ref$.id : void 8)) {
      App.vm.addTapElement(el);
    }
  }
  if (el.id === ((ref1$ = App.vm.currentTap) != null ? ref1$.id : void 8)) {
    return App.vm.currentTap = el;
  }
};
window.App = App;
module.exports = App;